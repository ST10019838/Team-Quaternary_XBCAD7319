name: Team_Quaternary_CI_Main

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

#_______________________________SETUP_______________________________________________#
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set working directory
        run: cd application

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: application/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('application/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install
        working-directory: application

#_______________________________SETUP_______________________________________________#
#_______________________________TEST________________________________________________#

      #- name: Run tests
        # run: npm run test
        # working-directory: application

#_______________________________SECURITY SCAN SETUP_______________________________________________#

      - name: Install .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0' # Use the required .NET version

      - name: Setup Tools Directory and Manifest
        shell: bash
        env:
          DOTNET_ROOT: /usr/share/dotnet
        run: |
          echo "Starting setup..."
          mkdir -p ./tools
          cd ./tools
          pwd  # Confirm current directory
      
          # Cleanup any pre-existing configuration
          echo "Clearing previous configurations..."
          rm -rf .config
      
          # Create the tool manifest
          echo "Creating tool manifest..."
          dotnet new tool-manifest --force || { echo 'Failed to create tool manifest.' ; exit 1; }
          echo "Manifest created successfully."
      
          # Debugging: Check contents of tools directory
          echo "Contents of tools directory after creating manifest:"
          ls -la
      
          # Move manifest file if it exists in .config directory
          if [ -f .config/dotnet-tools.json ]; then
            echo "Manifest file found in .config. Moving to current directory..."
            mv .config/dotnet-tools.json ./dotnet-tools.json || { echo 'Failed to move manifest file.' ; exit 1; }
          fi
      
          # Verify manifest creation in the correct location
          MANIFEST_PATH=$(pwd)/dotnet-tools.json
          if [ -f "$MANIFEST_PATH" ]; then
            echo "Manifest file exists at $MANIFEST_PATH."
          else
            echo "Manifest file not found after moving. Exiting..."
            exit 1
          fi
          cd ..


      #- name: Install Security Code Scan as Project Tool
      #  run: dotnet tool install SecurityCodeScan --tool-manifest ./tools/dotnet-tools.json --version 3.5.4

      - name: Run Security Code Scan
        run: |
          ./tools/.store/securitycodescan/3.5.4/securitycodescan/3.5.4/tools/security-scan --output application/security-reports/security-code-scan.sarif --format sarif || { echo 'Security scan failed.'; exit 1; }

      - name: Upload SARIF Report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: application/security-reports/security-code-scan.sarif

      #- name: SonarQube Scan
        #uses: kitabisa/sonarqube-action@v1.2.1

      - name: HCL AppScan CodeSweep
        uses: HCL-TECH-SOFTWARE/appscan-codesweep-action@v2.1

#_______________________________TEST________________________________________________#
#______________________________BUILD________________________________________________#

      - name: Build project
        run: npm run build
        working-directory: application

#______________________________BUILD________________________________________________#
#______________________________UPLOAD_______________________________________________#
      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: nextjs-build
          path: application/.next
#______________________________UPLOAD_______________________________________________#
